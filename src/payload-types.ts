/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    instruments: Instrument;
    history: History;
    chat: Chat;
    subscriptions: Subscription;
    billing: Billing;
    tiers: Tier;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {
    settings: Setting;
  };
}
export interface User {
  id: string;
  firstName?: string | null;
  lastName?: string | null;
  phone?: string | null;
  address?: string | null;
  prefersDarkMode?: boolean | null;
  notifications?: {
    communicationEmails?: boolean | null;
    marketingEmails?: boolean | null;
    socialMediaAds?: boolean | null;
    securityEmails?: boolean | null;
    pushNotifications?: boolean | null;
  };
  totalUsage?: number | null;
  monthlyUsage?: number | null;
  favoriteInstruments?: (string | Instrument)[] | null;
  logs?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  roles?: ('admin' | 'reader' | 'customer')[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
export interface Instrument {
  id: string;
  name: string;
  intro: string;
  description: string;
  example: string;
  prompt: string;
  owner?: (string | null) | User;
  instrumentType?: ('business' | 'social' | 'custom' | 'other') | null;
  updatedAt: string;
  createdAt: string;
}
export interface History {
  id: string;
  input: string;
  output: string;
  owner: string | User;
  instrument: string | Instrument;
  isPinned?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
export interface Chat {
  id: string;
  name?: string | null;
  owner?: (string | null) | User;
  messages?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface Subscription {
  id: string;
  name: string;
  owner: string | User;
  active?: boolean | null;
  startDate: string;
  endDate: string;
  nextPaymentDate: string;
  lastPaymentDate: string;
  tier?: (string | null) | Tier;
  updatedAt: string;
  createdAt: string;
}
export interface Tier {
  id: string;
  name: string;
  allowance: number;
  description?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  allowChat?: boolean | null;
  allowTemplates?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
export interface Billing {
  id: string;
  invoiceNumber: string;
  orderID: string;
  paymentType: string;
  paymentDate: string;
  paid: boolean;
  subscription?: (string | null) | Subscription;
  owner?: (string | null) | User;
  data?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
export interface Setting {
  id: string;
  privacyPolicyUrl: string;
  termsOfUseUrl: string;
  email: string;
  telegram: string;
  timePerQuery: number;
  costPerQuery: number;
  releaseNotes: {
    [k: string]: unknown;
  }[];
  subscriptionsLinks?:
    | {
        tier?: (string | null) | Tier;
        url: string;
        price: number;
        currency: string;
        isFeatured?: boolean | null;
        id?: string | null;
      }[]
    | null;
  subscriptionIds?:
    | {
        externalSubscriptionId: string;
        tier: string | Tier;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}